name: CD - Terraform Deploy (manual)

on:
  workflow_dispatch:
    inputs:
      image_tag:
        description: 'Docker image tag (e.g. full commit SHA)'
        required: true
        default: 'latest'
      docker_repo:
        description: 'Docker repo (username/strapi-app) â€” override if needed'
        required: false
        default: ''

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.5.7'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Initialize Terraform
        working-directory: terraform
        run: terraform init -input=false

      - name: Terraform plan
        working-directory: ${{ github.workspace }}/terraform
        run: |
          terraform plan \
            -var="image_tag=${{ inputs.image_tag }}" \
            -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" \
            -var="docker_repo=${{ inputs.docker_repo != '' && inputs.docker_repo || format('%s/%s', env.DOCKERHUB_USERNAME, 'strapi-app') }}" \
            -out=plan.tfplan
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

      - name: Terraform apply
        working-directory: ${{ github.workspace }}/terraform
        run: terraform apply -input=false -auto-approve plan.tfplan

      - name: Print public IP
        working-directory: ${{ github.workspace }}/terraform
        run: terraform output -raw public_ip

